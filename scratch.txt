import { StatusBar } from 'expo-status-bar'
import React, { Component } from 'react'
import { StyleSheet, Text, View, Button } from 'react-native'
import Component1 from './Component1'
import styles from './MyStyles'
import Parent from './Parent'
import CounterComponent from './CounterComponent'
import LoginComponent from './LoginComponent'
import MyEmployeeList from './MyEmployeeList'
import ScrollViewDemo from './ScrollViewDemo'
import MyImagesDemo from './MyImagesDemo'

class App extends Component {
  state = {
    myName: 'Amey',
    myCountry: 'India'
  }

  constructor () {
    super()
    this.myName2 = 'Aditya'
  }

  //click function
  onClickCountry = () => {
    this.setState({ myCountry: 'Dubai' })
  }

  render () {
    function onClick (name) {
      alert('Welcome ' + name)
    }

    return (
      <View style={styles.container1}>
        <StatusBar barStyle = "dark-content" hidden = {false} backgroundColor = "#E60000" translucent = {true} />
        <Text style={styles.text}>Hello One</Text>

        <MyImagesDemo/>

        {/* <ScrollViewDemo/> */}

        {/* <MyEmployeeList/> */}

        {/* <LoginComponent /> */}
        
        {/* 
        <Button
          title="Welcome"
          onPress={() => onClick("Amey")} */}
      
        {/* <Parent /> */}
      
        {/* <Component1 />

        <Text style={styles.text}> Hello {this.state.myName}</Text>

        <Text style={styles.text} onPress={this.onClickCountry}>
          Country: {this.state.myCountry} 
        </Text> */}
      </View>
    )
  }
}

export default App


====================================================================================================
Navigation example:

import { StatusBar } from 'expo-status-bar'
import React, { Component } from 'react'
import { StyleSheet, Text, View, Button } from 'react-native'
import styles from './MyStyles'
import { createNativeStackNavigator } from '@react-navigation/native-stack'
import { NavigationContainer } from '@react-navigation/native'

// stateless component - we can go for function based component

function HomeScreen({navigation}) {
  return (
    <View>

      <Text> Home Screen </Text>
      <Button
        title="Go to Details1"
        onPress={() => navigation.navigate('Details1',
          {
            empId: 14,
            empName:"Amey",
        }
        )}
        />
    </View>

  )
}


function DetailsScreen1({ route, navigation }) {
  
  const { empId, empName } = route.params;

  return (
    <View>

      <Text> Details Screen 1 </Text>

      <Text> Data Manipulation: {empId+200} </Text>
      <Text> empId: {empId} and empName: {empName}</Text>

      <Button
        title="Go to 2nd screen - Details 2"
        onPress={() => navigation.navigate('Details2')}
        />

    </View>

  )
}

function DetailsScreen2({navigation}) {
  return (
    <View>

      <Text> Details Screen 2 </Text>

      <Button
        title="Go Home"
        onPress={()=>navigation.navigate('Home')}/>

      <Button
        title="Go Back"
        onPress={()=>navigation.goBack()}/>
        
    </View>

  )
}

const Stack = createNativeStackNavigator()

function App() {
  return(
    <NavigationContainer>
      <Stack.Navigator initialRouteName="Home">
        <Stack.Screen name="Home" component={HomeScreen}/>
        <Stack.Screen name="Details1" component={DetailsScreen1}/>
        <Stack.Screen name="Details2" component={DetailsScreen2}/>
      </Stack.Navigator>

    </NavigationContainer>

  );
}

export default App;

===========================================================================================================

// In App.js in a new project

import * as React from 'react';
import { View, Text, Button, Linking } from 'react-native';
//open url
class App extends React.Component
{

  f1()
  {
    Linking
      .openURL('https://www.google.com')
      .catch((err)=>console.log("An error...can't open website",err))
  }
  render()
  {
    return(
      <View>
        <Button onPress={this.f1}
                title="Open Google">

                </Button>
      </View>
    );
  }
}

export default App;

Program 21:

How to convert image into a clickable one?

 render() {
    return (
      <View>

        <TouchableHighlight onPress={this.f1}>
          <Image
            source={require('../MyApp/resources/images/vodafone.jpg')}

          />
        </TouchableHighlight>
      </View>
    );

